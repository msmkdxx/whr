<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csj.cn.whr.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.csj.cn.whr.dto.Employee">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="job_number" jdbcType="BIGINT" property="jobNumber"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="birthday" jdbcType="DATE" property="birthday"/>
        <result column="identity" jdbcType="VARCHAR" property="identity"/>
        <result column="is_married" jdbcType="INTEGER" property="isMarried"/>
        <result column="nation_id" jdbcType="INTEGER" property="nationId"/>
        <result column="hometown" jdbcType="VARCHAR" property="hometown"/>
        <result column="political_id" jdbcType="INTEGER" property="politicalId"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="department_id" jdbcType="INTEGER" property="departmentId"/>
        <result column="position_id" jdbcType="INTEGER" property="positionId"/>
        <result column="job_title" jdbcType="INTEGER" property="jobTitle"/>
        <result column="employment_form" jdbcType="INTEGER" property="employmentForm"/>
        <result column="entry_date" jdbcType="DATE" property="entryDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, `name`, job_number, sex, birthday, `identity`, is_married, nation_id, hometown,
        political_id, email, phone, address, department_id, position_id, job_title, employment_form,
        entry_date
    </sql>
    <select id="selectByExample" parameterType="com.csj.cn.whr.dto.EmployeeExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            limit #{limit}
            <if test="offset !=null">
                ,#{offset}
            </if>
        </if>
    </select>
    <select id="selectBySearch" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from employee
        <where>
            <trim suffix="" suffixOverrides="and">
                <if test="searchVo.name != null and searchVo.name !=''">
                    name like concat('%',#{searchVo.name},'%') and
                </if>
                <if test="searchVo.nationId != null and searchVo.nationId != 0">
                    nation_id = #{searchVo.nationId} and
                </if>
                <if test="searchVo.politicalId != null and searchVo.politicalId != 0">
                    political_id = #{searchVo.politicalId} and
                </if>
                <if test="searchVo.departmentId != null and searchVo.departmentId != 0">
                    department_id = #{searchVo.departmentId} and
                </if>
                <if test="searchVo.positionId != null and searchVo.positionId != 0">
                    position_id = #{searchVo.positionId} and
                </if>
                <if test="searchVo.jobTitle != null and searchVo.jobTitle != 0">
                    job_title = #{searchVo.jobTitle} and
                </if>
                <if test="searchVo.employmentForm != null and searchVo.employmentForm != 0">
                    employment_form = #{searchVo.employmentForm} and
                </if>
                <if test="searchVo.from != null and searchVo.to !=null">
                    entry_date between #{searchVo.from} and #{searchVo.to}
                </if>
            </trim>
        </where>
        <if test="limit != null">
            limit #{limit}
            <if test="offset !=null">
                ,#{offset}
            </if>
        </if>
    </select>
    <select id="selectCountBySearch" resultType="java.lang.Long">
        select count(*) from employee
        <where>
            <trim suffix="" suffixOverrides="and">
                <if test="searchVo.nationId != null and searchVo.nationId != 0">
                    nation_id = #{searchVo.nationId} and
                </if>
                <if test="searchVo.politicalId != null and searchVo.politicalId != 0">
                    political_id = #{searchVo.politicalId} and
                </if>
                <if test="searchVo.departmentId != null and searchVo.departmentId != 0">
                    department_id = #{searchVo.departmentId} and
                </if>
                <if test="searchVo.positionId != null and searchVo.positionId != 0">
                    position_id = #{searchVo.positionId} and
                </if>
                <if test="searchVo.jobTitle != null and searchVo.jobTitle != 0">
                    job_title = #{searchVo.jobTitle} and
                </if>
                <if test="searchVo.employmentForm != null and searchVo.employmentForm != 0">
                    employment_form = #{searchVo.employmentForm} and
                </if>
                <if test="searchVo.from != null and searchVo.to !=null">
                    entry_date between #{searchVo.from} and #{searchVo.to}
                </if>
            </trim>
        </where>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from employee
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from employee
        where id = #{id,jdbcType=BIGINT}
    </delete>

   <delete id="deleteByExample" parameterType="com.csj.cn.whr.dto.EmployeeExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.csj.cn.whr.dto.Employee">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into employee (id, `name`, job_number,
        sex, birthday, `identity`,
        is_married, nation_id, hometown,
        political_id, email, phone,
        address, department_id, position_id,
        job_title, employment_form, entry_date
        )
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{jobNumber,jdbcType=BIGINT},
        #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, #{identity,jdbcType=VARCHAR},
        #{isMarried,jdbcType=INTEGER}, #{nationId,jdbcType=INTEGER}, #{hometown,jdbcType=VARCHAR},
        #{politicalId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
        #{address,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, #{positionId,jdbcType=INTEGER},
        #{jobTitle,jdbcType=INTEGER}, #{employmentForm,jdbcType=INTEGER}, #{entryDate,jdbcType=DATE}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.csj.cn.whr.dto.Employee">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="jobNumber != null">
                job_number,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="identity != null">
                `identity`,
            </if>
            <if test="isMarried != null">
                is_married,
            </if>
            <if test="nationId != null">
                nation_id,
            </if>
            <if test="hometown != null">
                hometown,
            </if>
            <if test="politicalId != null">
                political_id,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="positionId != null">
                position_id,
            </if>
            <if test="jobTitle != null">
                job_title,
            </if>
            <if test="employmentForm != null">
                employment_form,
            </if>
            <if test="entryDate != null">
                entry_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="jobNumber != null">
                #{jobNumber,jdbcType=BIGINT},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="identity != null">
                #{identity,jdbcType=VARCHAR},
            </if>
            <if test="isMarried != null">
                #{isMarried,jdbcType=INTEGER},
            </if>
            <if test="nationId != null">
                #{nationId,jdbcType=INTEGER},
            </if>
            <if test="hometown != null">
                #{hometown,jdbcType=VARCHAR},
            </if>
            <if test="politicalId != null">
                #{politicalId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="positionId != null">
                #{positionId,jdbcType=INTEGER},
            </if>
            <if test="jobTitle != null">
                #{jobTitle,jdbcType=INTEGER},
            </if>
            <if test="employmentForm != null">
                #{employmentForm,jdbcType=INTEGER},
            </if>
            <if test="entryDate != null">
                #{entryDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>

    <insert id="insertEmployees" parameterType="com.csj.cn.whr.dto.Employee">
        insert into employee
        (`name`, job_number,
        sex, birthday, `identity`,
        is_married, nation_id, hometown,
        political_id, email, phone,
        address, department_id, position_id,
        job_title, employment_form, entry_date
        )
        values
        <foreach collection="employees" item="employee" separator=",">
            (#{employee.name,jdbcType=VARCHAR}, #{employee.jobNumber,jdbcType=BIGINT},
            #{employee.sex,jdbcType=INTEGER}, #{employee.birthday,jdbcType=DATE}, #{employee.identity,jdbcType=VARCHAR},
            #{employee.isMarried,jdbcType=INTEGER}, #{employee.nationId,jdbcType=INTEGER},
            #{employee.hometown,jdbcType=VARCHAR},
            #{employee.politicalId,jdbcType=INTEGER}, #{employee.email,jdbcType=VARCHAR},
            #{employee.phone,jdbcType=VARCHAR},
            #{employee.address,jdbcType=VARCHAR}, #{employee.departmentId,jdbcType=INTEGER},
            #{employee.positionId,jdbcType=INTEGER},
            #{employee.jobTitle,jdbcType=INTEGER}, #{employee.employmentForm,jdbcType=INTEGER},
            #{employee.entryDate,jdbcType=DATE}
            )
        </foreach>
    </insert>

    <select id="countByExample" parameterType="com.csj.cn.whr.dto.EmployeeExample" resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update employee
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.jobNumber != null">
                job_number = #{record.jobNumber,jdbcType=BIGINT},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=INTEGER},
            </if>
            <if test="record.birthday != null">
                birthday = #{record.birthday,jdbcType=DATE},
            </if>
            <if test="record.identity != null">
                `identity` = #{record.identity,jdbcType=VARCHAR},
            </if>
            <if test="record.isMarried != null">
                is_married = #{record.isMarried,jdbcType=INTEGER},
            </if>
            <if test="record.nationId != null">
                nation_id = #{record.nationId,jdbcType=INTEGER},
            </if>
            <if test="record.hometown != null">
                hometown = #{record.hometown,jdbcType=VARCHAR},
            </if>
            <if test="record.politicalId != null">
                political_id = #{record.politicalId,jdbcType=INTEGER},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.departmentId != null">
                department_id = #{record.departmentId,jdbcType=INTEGER},
            </if>
            <if test="record.positionId != null">
                position_id = #{record.positionId,jdbcType=INTEGER},
            </if>
            <if test="record.jobTitle != null">
                job_title = #{record.jobTitle,jdbcType=INTEGER},
            </if>
            <if test="record.employmentForm != null">
                employment_form = #{record.employmentForm,jdbcType=INTEGER},
            </if>
            <if test="record.entryDate != null">
                entry_date = #{record.entryDate,jdbcType=DATE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update employee
        set id = #{record.id,jdbcType=BIGINT},
        `name` = #{record.name,jdbcType=VARCHAR},
        job_number = #{record.jobNumber,jdbcType=BIGINT},
        sex = #{record.sex,jdbcType=INTEGER},
        birthday = #{record.birthday,jdbcType=DATE},
        `identity` = #{record.identity,jdbcType=VARCHAR},
        is_married = #{record.isMarried,jdbcType=INTEGER},
        nation_id = #{record.nationId,jdbcType=INTEGER},
        hometown = #{record.hometown,jdbcType=VARCHAR},
        political_id = #{record.politicalId,jdbcType=INTEGER},
        email = #{record.email,jdbcType=VARCHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        address = #{record.address,jdbcType=VARCHAR},
        department_id = #{record.departmentId,jdbcType=INTEGER},
        position_id = #{record.positionId,jdbcType=INTEGER},
        job_title = #{record.jobTitle,jdbcType=INTEGER},
        employment_form = #{record.employmentForm,jdbcType=INTEGER},
        entry_date = #{record.entryDate,jdbcType=DATE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.csj.cn.whr.dto.Employee">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update employee
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="jobNumber != null">
                job_number = #{jobNumber,jdbcType=BIGINT},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="identity != null">
                `identity` = #{identity,jdbcType=VARCHAR},
            </if>
            <if test="isMarried != null">
                is_married = #{isMarried,jdbcType=INTEGER},
            </if>
            <if test="nationId != null">
                nation_id = #{nationId,jdbcType=INTEGER},
            </if>
            <if test="hometown != null">
                hometown = #{hometown,jdbcType=VARCHAR},
            </if>
            <if test="politicalId != null">
                political_id = #{politicalId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="positionId != null">
                position_id = #{positionId,jdbcType=INTEGER},
            </if>
            <if test="jobTitle != null">
                job_title = #{jobTitle,jdbcType=INTEGER},
            </if>
            <if test="employmentForm != null">
                employment_form = #{employmentForm,jdbcType=INTEGER},
            </if>
            <if test="entryDate != null">
                entry_date = #{entryDate,jdbcType=DATE},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.csj.cn.whr.dto.Employee">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update employee
        set `name` = #{name,jdbcType=VARCHAR},
        job_number = #{jobNumber,jdbcType=BIGINT},
        sex = #{sex,jdbcType=INTEGER},
        birthday = #{birthday,jdbcType=DATE},
        `identity` = #{identity,jdbcType=VARCHAR},
        is_married = #{isMarried,jdbcType=INTEGER},
        nation_id = #{nationId,jdbcType=INTEGER},
        hometown = #{hometown,jdbcType=VARCHAR},
        political_id = #{politicalId,jdbcType=INTEGER},
        email = #{email,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        address = #{address,jdbcType=VARCHAR},
        department_id = #{departmentId,jdbcType=INTEGER},
        position_id = #{positionId,jdbcType=INTEGER},
        job_title = #{jobTitle,jdbcType=INTEGER},
        employment_form = #{employmentForm,jdbcType=INTEGER},
        entry_date = #{entryDate,jdbcType=DATE}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>